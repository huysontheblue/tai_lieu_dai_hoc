'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.42000
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
'
Namespace com.luxshare_ict.plmNew
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="webserviceasmxSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class webserviceasmx
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private lx_getDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getKSRFInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCADDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.RCard.My.MySettings.Default.RCard_com_luxshare_ict_plmNew_webserviceasmx
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getInfoCompleted As getInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event lx_getDocumentCompleted As lx_getDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event getKSRFInfoCompleted As getKSRFInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event getCADDocumentCompleted As getCADDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event getDocumentCompleted As getDocumentCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getInfo(ByVal plant As String, ByVal days As Integer, ByVal code As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getInfo", New Object() {plant, days, code})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInfoAsync(ByVal plant As String, ByVal days As Integer, ByVal code As String)
            Me.getInfoAsync(plant, days, code, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInfoAsync(ByVal plant As String, ByVal days As Integer, ByVal code As String, ByVal userState As Object)
            If (Me.getInfoOperationCompleted Is Nothing) Then
                Me.getInfoOperationCompleted = AddressOf Me.OngetInfoOperationCompleted
            End If
            Me.InvokeAsync("getInfo", New Object() {plant, days, code}, Me.getInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInfoCompleted(Me, New getInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/lx_getDocument", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function lx_getDocument(ByVal part_no As String, ByVal uid As String, ByVal local_path As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("lx_getDocument", New Object() {part_no, uid, local_path})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub lx_getDocumentAsync(ByVal part_no As String, ByVal uid As String, ByVal local_path As String)
            Me.lx_getDocumentAsync(part_no, uid, local_path, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub lx_getDocumentAsync(ByVal part_no As String, ByVal uid As String, ByVal local_path As String, ByVal userState As Object)
            If (Me.lx_getDocumentOperationCompleted Is Nothing) Then
                Me.lx_getDocumentOperationCompleted = AddressOf Me.Onlx_getDocumentOperationCompleted
            End If
            Me.InvokeAsync("lx_getDocument", New Object() {part_no, uid, local_path}, Me.lx_getDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub Onlx_getDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.lx_getDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent lx_getDocumentCompleted(Me, New lx_getDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getKSRFInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getKSRFInfo() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getKSRFInfo", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getKSRFInfoAsync()
            Me.getKSRFInfoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getKSRFInfoAsync(ByVal userState As Object)
            If (Me.getKSRFInfoOperationCompleted Is Nothing) Then
                Me.getKSRFInfoOperationCompleted = AddressOf Me.OngetKSRFInfoOperationCompleted
            End If
            Me.InvokeAsync("getKSRFInfo", New Object(-1) {}, Me.getKSRFInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OngetKSRFInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.getKSRFInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getKSRFInfoCompleted(Me, New getKSRFInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCADDocument", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCADDocument(ByVal part_no As String, ByVal classification As String, ByVal guid As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getCADDocument", New Object() {part_no, classification, guid})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCADDocumentAsync(ByVal part_no As String, ByVal classification As String, ByVal guid As String)
            Me.getCADDocumentAsync(part_no, classification, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCADDocumentAsync(ByVal part_no As String, ByVal classification As String, ByVal guid As String, ByVal userState As Object)
            If (Me.getCADDocumentOperationCompleted Is Nothing) Then
                Me.getCADDocumentOperationCompleted = AddressOf Me.OngetCADDocumentOperationCompleted
            End If
            Me.InvokeAsync("getCADDocument", New Object() {part_no, classification, guid}, Me.getCADDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCADDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCADDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCADDocumentCompleted(Me, New getCADDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDocument", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDocument(ByVal part_no As String, ByVal guid As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getDocument", New Object() {part_no, guid})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDocumentAsync(ByVal part_no As String, ByVal guid As String)
            Me.getDocumentAsync(part_no, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDocumentAsync(ByVal part_no As String, ByVal guid As String, ByVal userState As Object)
            If (Me.getDocumentOperationCompleted Is Nothing) Then
                Me.getDocumentOperationCompleted = AddressOf Me.OngetDocumentOperationCompleted
            End If
            Me.InvokeAsync("getDocument", New Object() {part_no, guid}, Me.getDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDocumentCompleted(Me, New getDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub getInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub lx_getDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As lx_getDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class lx_getDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub getKSRFInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getKSRFInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getKSRFInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub getCADDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As getCADDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCADDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub getDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As getDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
