'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.17929
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
'
Namespace com.luxshare_ict.dcs
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BasicHttpBinding_ILdapAd", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LdapAd
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private AddOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckUserLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.MainFrame.My.MySettings.Default.MainFrame_com_luxshare_ict_dcs_LdapAd
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AddCompleted As AddCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckUserLoginCompleted As CheckUserLoginCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ILdapAd/Add", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Add(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal model As LdapAdModel) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> FlagTips
            Dim results() As Object = Me.Invoke("Add", New Object() {model})
            Return CType(results(0),FlagTips)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddAsync(ByVal model As LdapAdModel)
            Me.AddAsync(model, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddAsync(ByVal model As LdapAdModel, ByVal userState As Object)
            If (Me.AddOperationCompleted Is Nothing) Then
                Me.AddOperationCompleted = AddressOf Me.OnAddOperationCompleted
            End If
            Me.InvokeAsync("Add", New Object() {model}, Me.AddOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddCompleted(Me, New AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ILdapAd/CheckUserLogin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckUserLogin(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal empCode As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pwd As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> CheckUserModel
            Dim results() As Object = Me.Invoke("CheckUserLogin", New Object() {empCode, pwd})
            Return CType(results(0),CheckUserModel)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckUserLoginAsync(ByVal empCode As String, ByVal pwd As String)
            Me.CheckUserLoginAsync(empCode, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckUserLoginAsync(ByVal empCode As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.CheckUserLoginOperationCompleted Is Nothing) Then
                Me.CheckUserLoginOperationCompleted = AddressOf Me.OnCheckUserLoginOperationCompleted
            End If
            Me.InvokeAsync("CheckUserLogin", New Object() {empCode, pwd}, Me.CheckUserLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckUserLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckUserLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckUserLoginCompleted(Me, New CheckUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/Luxshare.DCS.WebApp.WCF")>  _
    Partial Public Class LdapAdModel
        
        Private accountField As String
        
        Private accountTypeField As LdapAdAccountTypeEnum
        
        Private accountTypeFieldSpecified As Boolean
        
        Private codeField As String
        
        Private pwdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Account() As String
            Get
                Return Me.accountField
            End Get
            Set
                Me.accountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountType() As LdapAdAccountTypeEnum
            Get
                Return Me.accountTypeField
            End Get
            Set
                Me.accountTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property AccountTypeSpecified() As Boolean
            Get
                Return Me.accountTypeFieldSpecified
            End Get
            Set
                Me.accountTypeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Pwd() As String
            Get
                Return Me.pwdField
            End Get
            Set
                Me.pwdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/Luxshare.DCS.Common")>  _
    Public Enum LdapAdAccountTypeEnum
        
        '''<remarks/>
        Ad
        
        '''<remarks/>
        Ldap
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/Luxshare.DCS.Data")>  _
    Partial Public Class CheckUserModel
        
        Private errMsgField As String
        
        Private isSuccessField As Boolean
        
        Private isSuccessFieldSpecified As Boolean
        
        Private loginTypeField As System.Nullable(Of LoginTypeEnum)
        
        Private loginTypeFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ErrMsg() As String
            Get
                Return Me.errMsgField
            End Get
            Set
                Me.errMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSuccess() As Boolean
            Get
                Return Me.isSuccessField
            End Get
            Set
                Me.isSuccessField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property IsSuccessSpecified() As Boolean
            Get
                Return Me.isSuccessFieldSpecified
            End Get
            Set
                Me.isSuccessFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LoginType() As System.Nullable(Of LoginTypeEnum)
            Get
                Return Me.loginTypeField
            End Get
            Set
                Me.loginTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property LoginTypeSpecified() As Boolean
            Get
                Return Me.loginTypeFieldSpecified
            End Get
            Set
                Me.loginTypeFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/Luxshare.DCS.Data")>  _
    Public Enum LoginTypeEnum
        
        '''<remarks/>
        AD
        
        '''<remarks/>
        LDAP
        
        '''<remarks/>
        DCS
        
        '''<remarks/>
        IsMasterKey
        
        '''<remarks/>
        Common
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/Luxshare.DCS.WebApp.Models")>  _
    Partial Public Class FlagTips
        
        Private errMsgField As String
        
        Private isSuccessField As Boolean
        
        Private isSuccessFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ErrMsg() As String
            Get
                Return Me.errMsgField
            End Get
            Set
                Me.errMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSuccess() As Boolean
            Get
                Return Me.isSuccessField
            End Get
            Set
                Me.isSuccessField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property IsSuccessSpecified() As Boolean
            Get
                Return Me.isSuccessFieldSpecified
            End Get
            Set
                Me.isSuccessFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddCompletedEventHandler(ByVal sender As Object, ByVal e As AddCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FlagTips
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FlagTips)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CheckUserLoginCompletedEventHandler(ByVal sender As Object, ByVal e As CheckUserLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckUserLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CheckUserModel
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CheckUserModel)
            End Get
        End Property
    End Class
End Namespace
